{"version":3,"sources":["webpack:///./src/pages/anime2.js"],"names":["Container","styled","animated","div","Masthead","h1","button","props","theme","color","secondary","screen","md","sm","SecondPage","callback","delay","savedCallback","useState","isToggled","setToggle","trail","useTrail","opacity","width","fadeUp","useSpring","config","friction","count","setCount","useRef","useEffect","current","id","setInterval","clearInterval","title","map","style"],"mappings":"2FAAA,sGAuEE,IAAMA,EAAYC,YAAOC,IAASC,KAAnB,wEAAGF,CAAH,yGASTG,EAAWH,YAAOC,IAASG,IAAnB,uEAAGJ,CAAH,yCAMYA,YAAOD,GAAV,kFAAGC,CAAH,uGAQLA,IAAOK,OAAV,0EAAGL,CAAH,ibAWD,SAAAM,GAAK,OAAIA,EAAMC,MAAMC,MAAMC,aAWpB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,OAAOC,MAE5B,SAAAL,GAAK,OAAIA,EAAMC,MAAMG,OAAOE,MAKlCC,UAlHE,WAAO,IAwCHC,EAAUC,EACvBC,EAzCe,EAEUC,oBAAS,GAAjCC,EAFc,KAEHC,EAFG,KAGfC,EAAQC,YAAS,GAAI,CACzBC,QAASJ,EAAY,EAAI,EACzBK,MAAOL,EAAY,MAAQ,SAEvBM,EAASC,YAAU,CACvBH,QAASJ,EAAY,EAAI,EACzBH,MAAOG,EAAY,IAAM,IACzBQ,OAAQ,CACNC,SAAUT,EAAY,IAAM,MAXX,EAeKD,mBAAS,GAA5BW,EAfc,KAePC,EAfO,KAwBvB,OAgBqBf,EAvBP,WAERe,EAASD,EAAQ,GACjBT,GAAWD,IAoBcH,EAnBxB,IAoBCC,EAAgBc,mBAGtBC,qBAAU,WACRf,EAAcgB,QAAUlB,IACvB,CAACA,IAGJiB,qBAAU,WAIR,GAAc,OAAVhB,EAAgB,CAClB,IAAIkB,EAAKC,aAJX,WACElB,EAAcgB,YAGajB,GAC3B,OAAO,kBAAMoB,cAAcF,OAE5B,CAAClB,IA/BA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKqB,MAAM,aACX,kBAAC,IAAD,MACA,kBAACrC,EAAD,KACCqB,EAAMiB,KAAI,SAAA/B,GAAK,OACd,kBAAC,IAASJ,IAAV,CAAcoC,MAAOhC,OAEtBY,GAAa,kBAACf,EAAD,CAAUmC,MAAOd,GAAjB","file":"component---src-pages-anime-2-js-3a9ff5c28cd9c4263121.js","sourcesContent":["import { render } from 'react-dom'\r\nimport React, { useState, useEffect, useRef  } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { useTransition, animated, config, useTrail, useSpring } from 'react-spring'\r\nimport Layout from \"../components/common/layout/layout\"\r\nimport SEO from \"../components/common/layout/seo\"\r\nimport Sub_Navigation from \"../components/common/navigation/sub_navigation\"\r\n\r\n\r\nconst SecondPage = () => {\r\n    \r\n    const [isToggled, setToggle] = useState(false)\r\n    const trail = useTrail(10, {\r\n      opacity: isToggled ? 1 : 0,\r\n      width: isToggled ? \"90%\" : \"100%\",\r\n    })\r\n    const fadeUp = useSpring({\r\n      opacity: isToggled ? 1 : 0,\r\n      delay: isToggled ? 600 : 200,\r\n      config: {\r\n        friction: isToggled ? 100 : 50,\r\n      },\r\n    })\r\n  \r\n    const [count, setCount] = useState(0);\r\n\r\n    useInterval(() => {\r\n        // Your custom logic here\r\n        setCount(count + 1);\r\n        setToggle(!isToggled);\r\n      }, 3000);\r\n\r\n\r\n  return  (\r\n\r\n        <Layout>\r\n        <SEO title=\"Page two\" />\r\n        <Sub_Navigation />\r\n        <Container>\r\n        {trail.map(props => (\r\n          <animated.div style={props} />\r\n        ))}\r\n        {isToggled && <Masthead style={fadeUp}>Hello Friends</Masthead>}\r\n      </Container>               \r\n      </Layout>\r\n    )\r\n  }\r\n  \r\n\r\n  function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n\r\n\r\n  const Container = styled(animated.div)`\r\n  display: grid;\r\n  grid-template-columns: repeat(10, 1fr);\r\n  \r\n    div {\r\n      height: 100vh;\r\n      background: rgba(0, 110, 250, 0.5);\r\n    }\r\n  `\r\n  const Masthead = styled(animated.h1)`\r\n  position: absolute;\r\n  top: 40%;\r\n  left: 10%;\r\n`\r\n \r\nconst GetStartedContainer = styled(Container)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 80px 0 40px;\r\n`\r\n\r\nconst TryItButton = styled.button`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: white;\r\n  letter-spacing: 1px;\r\n  height: 60px;\r\n  display: block;\r\n  margin-left: 8px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  background: ${props => props.theme.color.secondary};\r\n  border-radius: 4px;\r\n  padding: 0px 40px;\r\n  border-width: 0px;\r\n  border-style: initial;\r\n  border-color: initial;\r\n  border-image: initial;\r\n  outline: 0px;\r\n  &:hover {\r\n    box-shadow: rgba(110, 120, 152, 0.22) 0px 2px 10px 0px;\r\n  }\r\n  @media (max-width: ${props => props.theme.screen.md}) {\r\n  }\r\n  @media (max-width: ${props => props.theme.screen.sm}) {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\n  export default SecondPage"],"sourceRoot":""}